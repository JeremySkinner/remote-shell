export GIT_PROMPT_ShowStatusWhenZero=0
export GIT_PROMPT_BeforeStatus="on "
export GIT_PROMPT_AfterStatus=""
export GIT_PROMPT_AfterStatusColor="Yellow"
export GIT_PROMPT_DelimStatus=" working"
export GIT_PROMPT_BeforeIndex=" index"
export GIT_PROMPT_BeforeIndexColor="DarkGray"
export GIT_PROMPT_DelimStatusColor="DarkGray"
export GIT_PROMPT_IndexColor="Yellow"
export GIT_PROMPT_DefaultPromptSuffix="
$ "
export GIT_PROMPT_DefaultPromptPrefix="\[\033]0;\u@\h:\w\007\]\n{Cyan}\u{Reset} at {Magenta}\h {Reset}in {Green}\W{Reset}"
export GIT_PROMPT_BranchColor="Cyan"

if [ $PROD_SERVER ]; then 
  export GIT_PROMPT_DefaultPromptPrefix="\[\033]0;\u@\h:\w\007\]\n{Cyan}\u{Reset} at {Red}\h {Reset}in {Green}\W{Reset}"
fi

export EDITOR=nano

bind "set completion-ignore-case on"
bind "set show-all-if-ambiguous off"
bind '"\t":menu-complete'
bind '"\e[Z": menu-complete-backward'
#bind 'Escape: unix-line-discard'

alias ls='ls -A --color=auto'
alias dir=ls
alias cls=clear

# ls function that shows permissionas in octal form
lso() { ls -l "$@" | awk '{k=0;for(i=0;i<=8;i++)k+=((substr($1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(" %0o ",k);print}'; }

# nano sends backtabs when editing if using the default term (xterm-256color). This is OK when using ssh.exe that comes with
# git for windows, but breaks Windows' native ssh.exe and causes weird editing to happen. 
# workaroud by setting to xterm-color. https://serverfault.com/questions/329154/ssh-garbling-characters-in-vim-nano-on-remote-server
# Hopefully this will be fixed one day...
function nano {
  export TERM=xterm-color
  command nano $@
  export TERM=xterm-256color
}
